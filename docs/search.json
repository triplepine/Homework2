[
  {
    "objectID": "Control_flow_functions.html",
    "href": "Control_flow_functions.html",
    "title": "Programming in Base R",
    "section": "",
    "text": "pre_bp &lt;-c(130,128,116,124,133,134,118,126,114,127,141,138,128,140,137,131,120,128,139,135)\npost_bp &lt;-c(114,98,113,99,107,116,113,111,119,117,101,119,130,122,106,106,124,102,117,113)\n\n\n\n\n\npaste(\"Subject\", 1:20,sep=\"_\")\n\n [1] \"Subject_1\"  \"Subject_2\"  \"Subject_3\"  \"Subject_4\"  \"Subject_5\" \n [6] \"Subject_6\"  \"Subject_7\"  \"Subject_8\"  \"Subject_9\"  \"Subject_10\"\n[11] \"Subject_11\" \"Subject_12\" \"Subject_13\" \"Subject_14\" \"Subject_15\"\n[16] \"Subject_16\" \"Subject_17\" \"Subject_18\" \"Subject_19\" \"Subject_20\"\n\nnames(pre_bp) &lt;-c(paste(\"Subject\", 1:20,sep=\"_\"))\nnames(post_bp) &lt;-c(paste(\"Subject\", 1:20,sep=\"_\"))\n\n\n\n\n\ndiff_bp &lt;- c(pre_bp - post_bp)\n\n\n\n\n\nmean(diff_bp)\n\n[1] 17\n\n\n\n\n\n\nwhich(diff_bp&gt;0)\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n         1          2          3          4          5          6          7 \n Subject_8 Subject_10 Subject_11 Subject_12 Subject_14 Subject_15 Subject_16 \n         8         10         11         12         14         15         16 \nSubject_18 Subject_19 Subject_20 \n        18         19         20 \n\n\n\n\n\n\npositive_change &lt;- diff_bp[c(which(diff_bp&gt;0))]\n\n\n\n\n\nmean(positive_change)\n\n[1] 20.64706"
  },
  {
    "objectID": "Control_flow_functions.html#task-1-basic-vector-practice",
    "href": "Control_flow_functions.html#task-1-basic-vector-practice",
    "title": "Programming in Base R",
    "section": "",
    "text": "pre_bp &lt;-c(130,128,116,124,133,134,118,126,114,127,141,138,128,140,137,131,120,128,139,135)\npost_bp &lt;-c(114,98,113,99,107,116,113,111,119,117,101,119,130,122,106,106,124,102,117,113)\n\n\n\n\n\npaste(\"Subject\", 1:20,sep=\"_\")\n\n [1] \"Subject_1\"  \"Subject_2\"  \"Subject_3\"  \"Subject_4\"  \"Subject_5\" \n [6] \"Subject_6\"  \"Subject_7\"  \"Subject_8\"  \"Subject_9\"  \"Subject_10\"\n[11] \"Subject_11\" \"Subject_12\" \"Subject_13\" \"Subject_14\" \"Subject_15\"\n[16] \"Subject_16\" \"Subject_17\" \"Subject_18\" \"Subject_19\" \"Subject_20\"\n\nnames(pre_bp) &lt;-c(paste(\"Subject\", 1:20,sep=\"_\"))\nnames(post_bp) &lt;-c(paste(\"Subject\", 1:20,sep=\"_\"))\n\n\n\n\n\ndiff_bp &lt;- c(pre_bp - post_bp)\n\n\n\n\n\nmean(diff_bp)\n\n[1] 17\n\n\n\n\n\n\nwhich(diff_bp&gt;0)\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n         1          2          3          4          5          6          7 \n Subject_8 Subject_10 Subject_11 Subject_12 Subject_14 Subject_15 Subject_16 \n         8         10         11         12         14         15         16 \nSubject_18 Subject_19 Subject_20 \n        18         19         20 \n\n\n\n\n\n\npositive_change &lt;- diff_bp[c(which(diff_bp&gt;0))]\n\n\n\n\n\nmean(positive_change)\n\n[1] 20.64706"
  },
  {
    "objectID": "Control_flow_functions.html#task-2-basic-data-frame-practice",
    "href": "Control_flow_functions.html#task-2-basic-data-frame-practice",
    "title": "Programming in Base R",
    "section": "Task 2: Basic Data Frame practice",
    "text": "Task 2: Basic Data Frame practice\n\n1. Create a data frame object with 4 columns\n\npatient &lt;-c(paste(\"Subject\", 1:20,sep=\"_\"))\nbp_df &lt;-data.frame(patient,pre_bp,post_bp,diff_bp,row.names=NULL)\n\n\n\n2. Return only rows with negative diff_bp\n\n`[`(bp_df,bp_df$diff_bp&lt;0, ) \n\n      patient pre_bp post_bp diff_bp\n9   Subject_9    114     119      -5\n13 Subject_13    128     130      -2\n17 Subject_17    120     124      -4\n\nbp_df[bp_df$diff_bp&lt;0, ]\n\n      patient pre_bp post_bp diff_bp\n9   Subject_9    114     119      -5\n13 Subject_13    128     130      -2\n17 Subject_17    120     124      -4\n\nsubset(bp_df,diff_bp&lt;0)\n\n      patient pre_bp post_bp diff_bp\n9   Subject_9    114     119      -5\n13 Subject_13    128     130      -2\n17 Subject_17    120     124      -4\n\n\n\n\n3. Add a new column (TRUE if post_bp&lt;120)\n\nbp_df$post_bp_less_120 &lt;-ifelse(bp_df$post_bp&lt;120,TRUE,FALSE)\n\n\n\n4. Print the data frame out\n\nknitr::kable(bp_df,align='c',\"simple\")\n\n\n\n\npatient\npre_bp\npost_bp\ndiff_bp\npost_bp_less_120\n\n\n\n\nSubject_1\n130\n114\n16\nTRUE\n\n\nSubject_2\n128\n98\n30\nTRUE\n\n\nSubject_3\n116\n113\n3\nTRUE\n\n\nSubject_4\n124\n99\n25\nTRUE\n\n\nSubject_5\n133\n107\n26\nTRUE\n\n\nSubject_6\n134\n116\n18\nTRUE\n\n\nSubject_7\n118\n113\n5\nTRUE\n\n\nSubject_8\n126\n111\n15\nTRUE\n\n\nSubject_9\n114\n119\n-5\nTRUE\n\n\nSubject_10\n127\n117\n10\nTRUE\n\n\nSubject_11\n141\n101\n40\nTRUE\n\n\nSubject_12\n138\n119\n19\nTRUE\n\n\nSubject_13\n128\n130\n-2\nFALSE\n\n\nSubject_14\n140\n122\n18\nFALSE\n\n\nSubject_15\n137\n106\n31\nTRUE\n\n\nSubject_16\n131\n106\n25\nTRUE\n\n\nSubject_17\n120\n124\n-4\nFALSE\n\n\nSubject_18\n128\n102\n26\nTRUE\n\n\nSubject_19\n139\n117\n22\nTRUE\n\n\nSubject_20\n135\n113\n22\nTRUE"
  },
  {
    "objectID": "Control_flow_functions.html#task-3-list-practice",
    "href": "Control_flow_functions.html#task-3-list-practice",
    "title": "Programming in Base R",
    "section": "Task 3: List practice",
    "text": "Task 3: List practice\n\n1. Create a new data frame\n\npatient &lt;-paste(\"Subject\", 1:10,sep=\"_\")\npre_placebo &lt;-c(138,135,147,117,152,134,114,121,131,130)\npost_placebo &lt;-c(105,136,123,130,134,143,135,139,120,124)\ndiff_placebo &lt;- pre_placebo - post_placebo\nplacebo_df &lt;-data.frame(patient,pre_bp=pre_placebo,post_bp=post_placebo,diff_bp=diff_placebo)\nplacebo_df$post_bp_less_120 &lt;-ifelse(placebo_df$post_bp&lt;120,TRUE,FALSE)\n\n\n\n2. Create and store a list with two elements\n\nmy_list &lt;- list(treatment=bp_df, placebo=placebo_df)\n\n\n\n3. Access the first list element using three different types of syntax\n\nmy_list[1]\n\n$treatment\n      patient pre_bp post_bp diff_bp post_bp_less_120\n1   Subject_1    130     114      16             TRUE\n2   Subject_2    128      98      30             TRUE\n3   Subject_3    116     113       3             TRUE\n4   Subject_4    124      99      25             TRUE\n5   Subject_5    133     107      26             TRUE\n6   Subject_6    134     116      18             TRUE\n7   Subject_7    118     113       5             TRUE\n8   Subject_8    126     111      15             TRUE\n9   Subject_9    114     119      -5             TRUE\n10 Subject_10    127     117      10             TRUE\n11 Subject_11    141     101      40             TRUE\n12 Subject_12    138     119      19             TRUE\n13 Subject_13    128     130      -2            FALSE\n14 Subject_14    140     122      18            FALSE\n15 Subject_15    137     106      31             TRUE\n16 Subject_16    131     106      25             TRUE\n17 Subject_17    120     124      -4            FALSE\n18 Subject_18    128     102      26             TRUE\n19 Subject_19    139     117      22             TRUE\n20 Subject_20    135     113      22             TRUE\n\nmy_list[[1]]\n\n      patient pre_bp post_bp diff_bp post_bp_less_120\n1   Subject_1    130     114      16             TRUE\n2   Subject_2    128      98      30             TRUE\n3   Subject_3    116     113       3             TRUE\n4   Subject_4    124      99      25             TRUE\n5   Subject_5    133     107      26             TRUE\n6   Subject_6    134     116      18             TRUE\n7   Subject_7    118     113       5             TRUE\n8   Subject_8    126     111      15             TRUE\n9   Subject_9    114     119      -5             TRUE\n10 Subject_10    127     117      10             TRUE\n11 Subject_11    141     101      40             TRUE\n12 Subject_12    138     119      19             TRUE\n13 Subject_13    128     130      -2            FALSE\n14 Subject_14    140     122      18            FALSE\n15 Subject_15    137     106      31             TRUE\n16 Subject_16    131     106      25             TRUE\n17 Subject_17    120     124      -4            FALSE\n18 Subject_18    128     102      26             TRUE\n19 Subject_19    139     117      22             TRUE\n20 Subject_20    135     113      22             TRUE\n\nmy_list$treatment\n\n      patient pre_bp post_bp diff_bp post_bp_less_120\n1   Subject_1    130     114      16             TRUE\n2   Subject_2    128      98      30             TRUE\n3   Subject_3    116     113       3             TRUE\n4   Subject_4    124      99      25             TRUE\n5   Subject_5    133     107      26             TRUE\n6   Subject_6    134     116      18             TRUE\n7   Subject_7    118     113       5             TRUE\n8   Subject_8    126     111      15             TRUE\n9   Subject_9    114     119      -5             TRUE\n10 Subject_10    127     117      10             TRUE\n11 Subject_11    141     101      40             TRUE\n12 Subject_12    138     119      19             TRUE\n13 Subject_13    128     130      -2            FALSE\n14 Subject_14    140     122      18            FALSE\n15 Subject_15    137     106      31             TRUE\n16 Subject_16    131     106      25             TRUE\n17 Subject_17    120     124      -4            FALSE\n18 Subject_18    128     102      26             TRUE\n19 Subject_19    139     117      22             TRUE\n20 Subject_20    135     113      22             TRUE\n\n\n\n\n4. In one line, access the placebo data frame, pre_bp column\n\nmy_list$placebo$pre_bp\n\n [1] 138 135 147 117 152 134 114 121 131 130"
  },
  {
    "objectID": "Control_flow_functions.html#task-4-control-flow-practice",
    "href": "Control_flow_functions.html#task-4-control-flow-practice",
    "title": "Programming in Base R",
    "section": "Task 4: Control Flow Practice",
    "text": "Task 4: Control Flow Practice\n\n1.create a new column called status\n\nmy_list$treatment$status &lt;- character(20)\nmy_list$placebo$status &lt;-character(10)\n\n\n\n2. create a for loop and use if/then/else logic to create status values for non-placebo data frame\n\n# my_list$treatment$status &lt;- ifelse(my_list$treatment$post_bp&lt;=120,\"optimal\",ifelse(my_list$treatment$post_bp&lt;=130,\"borderline\",\"high\"))\n\nfor (i in 1:20){\n  if (my_list$treatment$post_bp[i] &lt;=120) {\n    my_list$treatment$status[i]&lt;-\"optimal\"\n  } else if (my_list$treatment$post_bp[i] &gt;130) {\n    my_list$treatment$status[i]&lt;-\"high\"\n  } else {\n    my_list$treatment$status[i]&lt;-\"borderline\"\n  }\n}\nmy_list$treatment$status\n\n [1] \"optimal\"    \"optimal\"    \"optimal\"    \"optimal\"    \"optimal\"   \n [6] \"optimal\"    \"optimal\"    \"optimal\"    \"optimal\"    \"optimal\"   \n[11] \"optimal\"    \"optimal\"    \"borderline\" \"borderline\" \"optimal\"   \n[16] \"optimal\"    \"borderline\" \"optimal\"    \"optimal\"    \"optimal\"   \n\n\n\n\n3.create a for loop and use if/then/else logic to create status values for placebo data frame\n\nfor (i in 1:10) {\n  if (my_list$placebo$post_bp[i]&lt;=120){\n    my_list$placebo$status[i]&lt;-\"optimal\"\n  } else if (my_list$placebo$post_bp[i]&gt;130) {\n    my_list$placebo$status[i]&lt;-\"high\"\n  } else {my_list$placebo$status[i]&lt;-\"borderline\"\n  }\n}\nmy_list$placebo$status\n\n [1] \"optimal\"    \"high\"       \"borderline\" \"borderline\" \"high\"      \n [6] \"high\"       \"high\"       \"high\"       \"optimal\"    \"borderline\""
  },
  {
    "objectID": "Control_flow_functions.html#task-5-function-writing",
    "href": "Control_flow_functions.html#task-5-function-writing",
    "title": "Programming in Base R",
    "section": "Task 5: Function Writing",
    "text": "Task 5: Function Writing\n\n1.Write a function that\n*takes in a list with two data frames in it\n\ntake_in_list &lt;- function(data_frame1,data_frame2){\n  list(treatmnet=data_frame1,placebo=data_frame2)\n}\n\n*takes in an R function find a summary of a numeric column (default set to “mean”)\n\nsummary_mean &lt;- function(column){\n  if(!is.numeric(column)){\n    stop(\"Not numeric column\")\n  }\n  mean(column)\n}\nsummary_mean(positive_change)\n\n[1] 20.64706\n\n\n\nfind statistic of interest for the pre,post,diff columns of both data frames\n\n\nfind_stat &lt;- function(stat){\n  my_fun &lt;-get(stat)\n  bp_pre&lt;-my_fun(bp_df$pre_bp)\n  bp_post&lt;-my_fun(bp_df$post_bp)\n  bp_diff&lt;-my_fun(bp_df$diff_bp)\n  pla_pre&lt;-my_fun(placebo_df$pre_bp)\n  pla_post&lt;-my_fun(placebo_df$post_bp)\n  pla_diff&lt;-my_fun(placebo_df$diff_bp)\n  return(list(bp_pre,bp_post,bp_diff,pla_pre,pla_post,pla_diff))\n  \n  #return six values as a named list\n  value_list&lt;-find_stat(stat)\n  #create a vector of names\n   if (mean) {\n    vec_name=c(paste(\"mean\",\"_\",1:6,sep=''))\n  } else if (var) {\n   vec_name=c(paste(\"var\",\"_\",1:6,sep=''))\n  } else if (sd) {\n   vec_name=c(paste(\"sd\",\"_\",1:6,sep=''))\n  } else if (min) {\n   vec_name=c(paste(\"min\",\"_\",1:6,sep=''))\n  } else if (max) {\n   vec_name=c(paste(\"max\",\"_\",1:6,sep=''))\n  }\n  \n  #create a vector of stat values\n  vec_value&lt;-c(value_list[1],value_list[2],value_list[3],\n               value_list[4],value_list[5],value_list[6])\n  #assign names() to the vector\n  names(vec_value)=c(vec_name)\n  \n}\n\n#apply function (var,sd,min,max)\nfind_stat(\"mean\")\n\n[[1]]\n[1] 129.35\n\n[[2]]\n[1] 112.35\n\n[[3]]\n[1] 17\n\n[[4]]\n[1] 131.9\n\n[[5]]\n[1] 128.9\n\n[[6]]\n[1] 3\n\nfind_stat('var')\n\n[[1]]\n[1] 64.55526\n\n[[2]]\n[1] 74.76579\n\n[[3]]\n[1] 153.6842\n\n[[4]]\n[1] 149.8778\n\n[[5]]\n[1] 124.9889\n\n[[6]]\n[1] 341.3333\n\nfind_stat('sd')\n\n[[1]]\n[1] 8.034629\n\n[[2]]\n[1] 8.646721\n\n[[3]]\n[1] 12.39694\n\n[[4]]\n[1] 12.24246\n\n[[5]]\n[1] 11.17984\n\n[[6]]\n[1] 18.47521\n\nfind_stat(\"min\")\n\n[[1]]\n[1] 114\n\n[[2]]\n[1] 98\n\n[[3]]\n[1] -5\n\n[[4]]\n[1] 114\n\n[[5]]\n[1] 105\n\n[[6]]\n[1] -21\n\nfind_stat(\"max\")\n\n[[1]]\n[1] 141\n\n[[2]]\n[1] 130\n\n[[3]]\n[1] 40\n\n[[4]]\n[1] 152\n\n[[5]]\n[1] 143\n\n[[6]]\n[1] 33"
  }
]